package com.football.ua.config;

import io.swagger.v3.oas.models.Components;
import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import io.swagger.v3.oas.models.security.SecurityScheme;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class OpenApiConfig {
    
    @Bean
    public OpenAPI footballOpenAPI() {
        final String securitySchemeName = "bearerAuth";
        
        return new OpenAPI()
            .info(new Info()
                .title("Football API")
                .description("""
                    REST API –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ñ—É—Ç–±–æ–ª—å–Ω–∏–º–∏ –º–∞—Ç—á–∞–º–∏, –∫–æ–º–∞–Ω–¥–∞–º–∏ —Ç–∞ –Ω–æ–≤–∏–Ω–∞–º–∏
                    
                    **–†—ñ–≤–Ω—ñ –¥–æ—Å—Ç—É–ø—É:**
                    - üåê PUBLIC: –ü—É–±–ª—ñ—á–Ω–∏–π –¥–æ—Å—Ç—É–ø (–±–µ–∑ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó)
                    - üîê AUTHENTICATED: –ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ (USER, MODERATOR, EDITOR)
                    - üëÆ MODERATOR: –¢—ñ–ª—å–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∏
                    - ‚úçÔ∏è EDITOR: –¢—ñ–ª—å–∫–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∏
                    
                    **–Ø–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏:**
                    1. –ó–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—è —á–µ—Ä–µ–∑ /api/auth/register
                    2. –£–≤—ñ–π–¥—ñ—Ç—å —á–µ—Ä–µ–∑ /api/auth/login —Ç–∞ –æ—Ç—Ä–∏–º–∞–π—Ç–µ JWT —Ç–æ–∫–µ–Ω
                    3. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "Authorize" —Ç–∞ –≤—Å—Ç–∞–≤—Ç–µ —Ç–æ–∫–µ–Ω
                    4. –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∑–∞—Ö–∏—â–µ–Ω—ñ endpoint'–∏
                    """)
                .version("2.0.0")
                .contact(new Contact()
                    .name("Football Team")
                    .email("support@football.ua")))
            .addSecurityItem(new SecurityRequirement().addList(securitySchemeName))
            .components(new Components()
                .addSecuritySchemes(securitySchemeName, new SecurityScheme()
                    .name(securitySchemeName)
                    .type(SecurityScheme.Type.HTTP)
                    .scheme("bearer")
                    .bearerFormat("JWT")
                    .description("–í–≤–µ–¥—ñ—Ç—å JWT —Ç–æ–∫–µ–Ω –æ—Ç—Ä–∏–º–∞–Ω–∏–π –ø—ñ—Å–ª—è –ª–æ–≥—ñ–Ω—É")));
    }
}

